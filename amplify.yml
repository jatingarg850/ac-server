version: 1
env:
  variables:
    NODE_ENV: production
    PORT: 8080
    DEBUG: '*'
backend:
  phases:
    preBuild:
      commands:
        - 'echo "Current directory: $PWD"'
        - 'echo "Directory contents:" && ls -la'
        - 'echo "Installing dependencies..."'
        - npm install
        - 'echo "Installing PM2..."'
        - npm install -g pm2
        - 'echo "Verifying build configuration..."'
        - node verify-build.js
        - 'echo "PreBuild phase completed"'
    build:
      commands:
        - 'echo "Starting build phase..."'
        - 'echo "Checking Node.js version:"'
        - node --version
        - 'echo "Checking directory structure:"'
        - ls -R
        - 'echo "Build phase completed"'
    postBuild:
      commands:
        - 'echo "Starting PM2..."'
        - 'pm2 delete all || true'
        - |
          if [ -f "ecosystem.config.cjs" ]; then
            echo "Starting server with ecosystem.config.cjs"
            pm2 start ecosystem.config.cjs --env production
          else
            echo "ecosystem.config.cjs not found, starting server directly"
            pm2 start index.js --name ac-server
          fi
        - 'sleep 10'
        - 'echo "PM2 Status:"'
        - pm2 list
        - 'echo "PM2 Logs:"'
        - pm2 logs --nostream --lines 100
        - 'echo "Testing health endpoint..."'
        - 'curl -v "http://localhost:8080/health" || true'
        - 'echo "Testing API endpoint..."'
        - 'curl -v "http://localhost:8080/api/ac-listings" || true'
  artifacts:
    baseDirectory: .
    files:
      - '**/*'
    excludes:
      - node_modules/**/*
      - src/**/*
      - public/**/*
      - '**/*.md'
      - '**/*.test.js'
  cache:
    paths:
      - node_modules/**/*
  customHeaders:
    - pattern: '/api/*'
      headers:
        - key: 'Access-Control-Allow-Origin'
          value: '*'
        - key: 'Access-Control-Allow-Headers'
          value: 'Origin,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,Accept'
        - key: 'Access-Control-Allow-Methods'
          value: 'GET,POST,PUT,DELETE,OPTIONS,HEAD'
        - key: 'Access-Control-Max-Age'
          value: '86400'
        - key: 'Access-Control-Expose-Headers'
          value: 'Access-Control-Allow-Origin'
  proxies:
    - path: '/api/*'
      target: 'http://localhost:8080'
      status: '200-399'
frontend:
  phases:
    preBuild:
      commands:
        - 'echo "No frontend build required"'
    build:
      commands:
        - 'echo "This is a backend-only application"'
  artifacts:
    baseDirectory: /
    files:
      - '**/*'
  customHeaders:
    - pattern: '**/*'
      headers:
        - key: 'Cache-Control'
          value: 'no-store'
        - key: 'Access-Control-Allow-Origin'
          value: '*' 